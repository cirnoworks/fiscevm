<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>fiscevm-c</artifactId>
	<name>FiScE Virtual Machine C bridge</name>
	<url>http://fiscevm.googlecode.com</url>
	<parent>
		<groupId>com.cirnoworks.fisce</groupId>
		<artifactId>fiscevm</artifactId>
		<version>2.0.0-SNAPSHOT</version>
	</parent>
	<properties>
		<cross.prefix.windows>i486-mingw32</cross.prefix.windows>
	</properties>
	<profiles>
		<profile>
			<id>native</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugin.cmake.ng</groupId>
						<artifactId>cmake-ng</artifactId>
						<version>1.0</version>
						<executions>
							<execution>
								<id>cmake-generate-native</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>compile</goal>
								</goals>
								<configuration>
									<output>${project.build.directory}/libfisce-out/native</output>
									<source>${basedir}/src/main/c</source>
									<vars>
										<CMAKE_BUILD_TYPE>Release</CMAKE_BUILD_TYPE>
									</vars>
								</configuration>
							</execution>
							<execution>
								<id>cmake-generate-test</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>compile</goal>
								</goals>
								<configuration>
									<output>${project.build.directory}/libfisce-test/native</output>
									<source>${basedir}/src/main/c</source>
									<vars>
										<CMAKE_BUILD_TYPE>Release</CMAKE_BUILD_TYPE>
										<ENABLE_TEST>ON</ENABLE_TEST>
										<ENABLE_LIBS>OFF</ENABLE_LIBS>
									</vars>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>copy-lib-native</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/classes/com/cirnoworks/libfisce/shell</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.directory}/libfisce-out/native</directory>
											<filtering>false</filtering>
											<includes>
												<include>*.so</include>
												<include>*.dll</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>native-test</id>
								<phase>test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${project.build.directory}/libfisce-test/native/fisce-test</executable>
									<arguments>
										<argument>${project.build.directory}/libfisce-test/fisce_scripts</argument>
									</arguments>
									<workingDirectory>${project.build.directory}/libfisce-test/native/</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>cross-win32</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugin.cmake.ng</groupId>
						<artifactId>cmake-ng</artifactId>
						<version>1.0</version>
						<executions>
							<execution>
								<id>cmake-generate-win32</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>compile</goal>
								</goals>
								<configuration>
									<output>${project.build.directory}/libfisce-out/win32</output>
									<source>${basedir}/src/main/c</source>
									<vars>
										<CMAKE_BUILD_TYPE>Release</CMAKE_BUILD_TYPE>
										<CMAKE_TOOLCHAIN_FILE>${basedir}/src/main/c/mingw32.toolchain.cmake</CMAKE_TOOLCHAIN_FILE>
										<COMPILER_PREFIX>i486-mingw32</COMPILER_PREFIX>
									</vars>
								</configuration>
							</execution>
							<execution>
								<id>cmake-generate-test</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>compile</goal>
								</goals>
								<configuration>
									<output>${project.build.directory}/libfisce-test/win32</output>
									<source>${basedir}/src/main/c</source>
									<vars>
										<CMAKE_BUILD_TYPE>Release</CMAKE_BUILD_TYPE>
										<ENABLE_TEST>ON</ENABLE_TEST>
										<ENABLE_LIBS>OFF</ENABLE_LIBS>
										<CMAKE_TOOLCHAIN_FILE>${basedir}/src/main/c/mingw32.toolchain.cmake</CMAKE_TOOLCHAIN_FILE>
										<COMPILER_PREFIX>i486-mingw32</COMPILER_PREFIX>
									</vars>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>copy-lib-win32</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/classes/com/cirnoworks/libfisce/shell</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.directory}/libfisce-out/win32</directory>
											<filtering>false</filtering>
											<includes>
												<include>*.so</include>
												<include>*.dll</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>native-test</id>
								<phase>test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>wine</executable>
									<arguments>
										<argument>${project.build.directory}/libfisce-test/win32/fisce-test</argument>
										<argument>${project.build.directory}/libfisce-test/fisce_scripts</argument>
									</arguments>
									<workingDirectory>${project.build.directory}/libfisce-test/win32/</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>android</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugin.cmake.ng</groupId>
						<artifactId>cmake-ng</artifactId>
						<version>1.0</version>
						<executions>
							<execution>
								<id>cmake-generate-android-arm</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>compile</goal>
								</goals>
								<configuration>
									<output>${project.build.directory}/output/android-arm</output>
									<source>${basedir}/src/main/c</source>
									<vars>
										<CMAKE_BUILD_TYPE>Release</CMAKE_BUILD_TYPE>
										<CMAKE_TOOLCHAIN_FILE>${basedir}/src/main/c/android.toolchain.cmake</CMAKE_TOOLCHAIN_FILE>
										<LIBRARY_OUTPUT_PATH_ROOT>.</LIBRARY_OUTPUT_PATH_ROOT>
										<ANDROID_ABI>armeabi</ANDROID_ABI>
										<ANDROID_NATIVE_API_LEVEL>android-4</ANDROID_NATIVE_API_LEVEL>
									</vars>
								</configuration>
							</execution>
							<execution>
								<id>cmake-generate-android-x86</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>compile</goal>
								</goals>
								<configuration>
									<output>${project.build.directory}/output/android-x86</output>
									<source>${basedir}/src/main/c</source>
									<vars>
										<CMAKE_BUILD_TYPE>Release</CMAKE_BUILD_TYPE>
										<CMAKE_TOOLCHAIN_FILE>${basedir}/src/main/c/android.toolchain.cmake</CMAKE_TOOLCHAIN_FILE>
										<LIBRARY_OUTPUT_PATH_ROOT>.</LIBRARY_OUTPUT_PATH_ROOT>
										<ANDROID_ABI>x86</ANDROID_ABI>
										<ANDROID_NATIVE_API_LEVEL>android-9</ANDROID_NATIVE_API_LEVEL>
									</vars>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<execution>
								<configuration>
									<descriptors>
										<descriptor>assembly-android.xml</descriptor>
									</descriptors>
								</configuration>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<build>
		<!-- <resources> <resource> <directory>src/main/resources</directory> <includes> 
			<include>**/*.so</include> <include>**/*.dll</include> <include>**/README</include> 
			<include>**/AUTHORS</include> <include>**/COPYING</include> <include>**/COPYING.*</include> 
			</includes> </resource> </resources> -->
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugin.cmake.ng
										</groupId>
										<artifactId>
											cmake-ng
										</artifactId>
										<versionRange>
											[1.0,)
										</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-assembly-plugin
										</artifactId>
										<versionRange>
											[2.4,)
										</versionRange>
										<goals>
											<goal>single</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<configuration>
							<attach>false</attach>
							<finalName>libfisce</finalName>
							<descriptors>
								<descriptor>assembly-test.xml</descriptor>
							</descriptors>
						</configuration>
						<id>make-assembly-test</id>
						<phase>test-compile</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.cirnoworks.fisce</groupId>
			<artifactId>fiscevm-intf</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.cirnoworks.fisce</groupId>
			<artifactId>fiscevm-rtdist</artifactId>
			<classifier>standalone</classifier>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.cirnoworks.fisce</groupId>
			<artifactId>fiscevm-rtdist</artifactId>
			<classifier>test</classifier>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>

